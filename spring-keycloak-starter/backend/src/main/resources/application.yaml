spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/demo-realm/protocol/openid-connect/certs
          issuer-uri: http://localhost:8080/realms/demo-realm
      client:
        registration:
          keycloak:
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            client-secret: ''
            client-id: demo-client
            scope: openid,profile,email
            client-name: Keycloak
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            user-name-attribute: preferred_username
            auth-server-url:  http://localhost:8080
            realm: demo-realm
            client-id: demo-client
            token-uri: http://localhost:8080/realms/demo-realm/protocol/openid-connect/token
            issuer-uri: http://localhost:8080/realms/demo-realm
            jwk-set-uri: http://localhost:8080/realms/demo-realm/protocol/openid-connect/certs
            user-info-uri: http://localhost:8080/realms/demo-realm/protocol/openid-connect/userinfo
            authorization-uri: http://localhost:8080/realms/demo-realm/protocol/openid-connect/auth
  datasource:
    password: student
    username: postgres
    url: jdbc:postgresql://localhost:5432/practica
  jpa:
    hibernate:
      ddl-auto: update
#    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: 'true'
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: 'true'
#  h2:
#    console:
#      path: /h2-console
#      enabled: 'true'
logging:
  level:
    org:
      springframework:
        security:
          oauth2: DEBUG
          nodeValue: DEBUG
server:
  port: '8081'

